<snippet>
	<content><![CDATA[
.round{

	// Настройки основного блока

	\$size: 100px; 																// Размер круга 
	\$color: #333;																	// Цвет текста и обводки
	\$border : 2px solid red; 															// Обводка
	\$box-shadow: none; 														// Цвет тени
	\$background-color: none; 											// Цвет заливки
	\$display: inline-block;												// Дисплей всего блока
	\$border-gutter: 0;													// Отступ, если задан бордер 


	//=========== Настройки иконки =============//

	\$ico-on: true;																// Включить css иконки



	//=========== Настройки иконки =============//


	//=========== Настройки счетчика =============//

	\$num-on : true;																			// Включить css счетчика
	\$num-counter: false;																// Считает сами round
	\$num-counter-name: items;														// Название переменной счетчика
	\$counter-before: '';																// Текст перед счетчиков
	\$counter-after: '';																	// Текст после счетчика
	\$num-size: 52px;																		// Размер шрифта счетчика
	\$num-color: \$color;																	// Цвет текста
	\$num-text-shadow: none;				// Цвет тени текста
	\$num-font-weight: 700;															// Толщина текста счетчика

	//=========== Настройки счетчика =============//


	//=========== Прочие =============//

	\$reset-on : false;																	// Если есть класс %reset, то ставим true





	@if(\$reset-on){
		@extend %reset;
	}
	border-radius: 50%;
	color: \$color;
	@if(\$num-counter){
		counter-increment: \$num-counter-name;
	}
	
	@if(\$box-shadow != none){
		box-shadow: \$box-shadow;
	}
	display: \$display;
	overflow: hidden;
	@if(\$border != none && \$border-gutter != none){
		padding: \$border-gutter;
	}

	// внутренний
	&__inner{
		@if(\$reset-on){
			@extend %reset;
		}
		display: table;
		text-align: center;
		width: \$size;
		height: \$size;
		background: no-repeat center / cover;
		@if(\$border != none){
			border: \$border;
		}
		@if(\$background-color != none){
			background-color: $background-color;
		}
		@if(\$border != none && \$border-gutter != none){
			border-radius: inherit;
		}
	}
	&__ico{
		@if(\$reset-on){
			@extend %reset;
		}
		@if(\$ico-on){
			display: table-cell;
			position: relative;
			vertical-align: middle;
		}
	}
	@if(\$num-on){
		&__num{
			@if(\$reset-on){
				@extend %reset;
			}
			display: table-cell;
			vertical-align: middle;
			font-weight: \$num-font-weight;
			font-size: \$num-size;
			@if(\$num-text-shadow != none){
				text-shadow: \$num-text-shadow;
			}
			@if(\$num-color != none){
				color: \$num-color;
			}
			&:before{
				content: \$counter-before counter(\$num-counter-name) \$counter-after;
				display: block;
			}
		}
	}

	// Модификаторы


}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>module-round</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.scss</scope>
</snippet>
